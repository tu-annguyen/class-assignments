41 2 0
38 1
8 252 396 301 347 1 0
8 318 396 367 347 1 0
22 258 348 424 328 0 \NUL
Read Register 1 Address
8 432 396 481 347 1 0
8 498 396 547 347 1 0
22 438 348 604 328 0 \NUL
Read Register 2 Address
20 720 414 779 395 0
wadr_0
20 654 414 713 395 0
wadr_1
8 606 396 655 347 1 0
8 672 396 721 347 1 0
22 612 348 767 328 0 \NUL
Write Register Address
20 480 414 539 395 0
adr2_1
20 546 414 605 395 0
adr2_0
20 366 414 425 395 0
adr1_0
20 300 414 359 395 0
adr1_1
19 174 108 233 89 0
reg0_2
19 162 84 221 65 0
reg0_3
19 198 156 257 137 0
reg0_0
19 186 132 245 113 0
reg0_1
11 258 108 285 10 0 1
22 144 36 255 16 0 \NUL
Register 0 Value
19 330 108 389 89 0
reg1_2
19 318 84 377 65 0
reg1_3
19 354 156 413 137 0
reg1_0
19 342 132 401 113 0
reg1_1
11 414 108 441 10 0 1
22 300 36 411 16 0 \NUL
Register 1 Value
19 486 108 545 89 0
reg2_2
19 474 84 533 65 0
reg2_3
19 510 156 569 137 0
reg2_0
19 498 132 557 113 0
reg2_1
11 570 108 597 10 0 1
22 456 36 567 16 0 \NUL
Register 2 Value
19 642 108 701 89 0
reg3_2
19 630 84 689 65 0
reg3_3
19 666 156 725 137 0
reg3_0
19 654 132 713 113 0
reg3_1
11 726 108 753 10 0 1
22 612 36 723 16 0 \NUL
Register 3 Value
19 648 264 707 245 0
alu_2
19 636 240 695 221 0
alu_3
19 672 312 731 293 0
alu_0
19 660 288 719 269 0
alu_1
11 732 264 759 166 0 1
22 648 192 724 172 0 \NUL
ALU Output
25 12 528 119 432
8 12 396 61 347 1 0
8 6 288 55 239 1 1
8 6 192 55 143 1 1
20 66 414 125 395 0
sel
20 60 210 119 191 0
clear
20 150 510 209 491 0
kpad_3
20 138 534 197 515 0
kpad_2
20 132 558 191 539 0
kpad_1
20 120 582 179 563 0
kpad_0
19 336 264 395 245 0
in1_2
19 324 240 383 221 0
in1_3
19 360 312 419 293 0
in1_0
19 348 288 407 269 0
in1_1
11 420 264 447 166 0 1
22 336 192 414 172 0 \NUL
ALU Input 1
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 110 10 0 \NUL
Nguyen, Tu-An
22 12 54 76 34 0 \NUL
tunhnguy
19 174 264 233 245 0
kpad_2
19 162 240 221 221 0
kpad_3
19 198 312 257 293 0
kpad_0
19 186 288 245 269 0
kpad_1
11 258 264 285 166 0 1
22 150 192 249 172 0 \NUL
Keypad Output
22 12 144 117 124 0 \NUL
Clear Registers
22 18 324 100 304 0 \NUL
Store Select
20 60 294 119 275 0
update
22 12 240 121 220 0 \NUL
Update Register
19 492 264 551 245 0
in2_2
19 480 240 539 221 0
in2_3
19 516 312 575 293 0
in2_0
19 504 288 563 269 0
in2_1
11 576 264 603 166 0 1
22 492 192 570 172 0 \NUL
ALU Input 2
22 18 348 230 328 0 \NUL
0 = Keypad input, 1 = ALU result
22 12 102 149 82 0 \NUL
CSE 12, Spring 2020
22 228 450 478 430 0 \NUL
Select clear to initialize registers to 0.
22 228 474 557 454 0 \NUL
Select store select to choose which value to store.
22 228 498 508 478 0 \NUL
Choose read and write register addresses.
22 228 522 727 502 0 \NUL
Read addresses = reg sources of ALU inputs, Write address = reg to save to
22 228 546 480 526 0 \NUL
Press update to save value to register
22 228 594 668 574 0 \NUL
You are only permitted to modify the header comment on this page.
1 655 404 652 371
1 721 404 718 371
1 481 404 478 371
1 547 404 544 371
1 367 404 364 371
1 301 404 298 371
1 259 74 218 74
1 230 98 259 80
1 242 122 259 86
1 254 146 259 92
1 415 74 374 74
1 386 98 415 80
1 398 122 415 86
1 410 146 415 92
1 571 74 530 74
1 542 98 571 80
1 554 122 571 86
1 566 146 571 92
1 727 74 686 74
1 698 98 727 80
1 710 122 727 86
1 722 146 727 92
1 733 230 692 230
1 704 254 733 236
1 716 278 733 242
1 728 302 733 248
1 52 167 61 200
1 58 371 67 404
1 421 230 380 230
1 392 254 421 236
1 404 278 421 242
1 416 302 421 248
1 116 500 151 500
1 116 506 139 524
1 116 512 133 548
1 116 518 121 572
1 259 230 218 230
1 230 254 259 236
1 242 278 259 242
1 254 302 259 248
1 52 263 61 284
1 577 230 536 230
1 548 254 577 236
1 560 278 577 242
1 572 302 577 248
38 2
52 Write Logic
22 336 99 410 79 0 \NUL
Write logic
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 110 10 0 \NUL
Nguyen, Tu-An
22 12 54 76 34 0 \NUL
tunhnguy
22 12 102 149 82 0 \NUL
CSE 12, Spring 2020
20 478 216 537 197 0
c_0
31 360 236 409 151 0 4
19 246 202 305 183 0
wadr_1
19 246 230 305 211 0
wadr_0
20 496 191 555 172 0
c_1
20 477 169 536 150 0
c_2
20 463 144 522 125 0
c_3
19 172 298 231 279 0
update
5 249 313 298 264 0
22 61 370 732 350 0 \NUL
Takes the inputs from Write Address switches, feeds it into a DeMux device to turn the 2 bit input into a
22 62 391 432 371 0 \NUL
4 bit output. The DeMux is enabled by the update button.
1 361 220 302 220
1 361 214 302 192
1 406 196 479 206
1 406 190 497 181
1 250 288 228 288
1 361 232 295 288
1 406 184 478 159
1 406 178 464 134
38 3
52 Register 0
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 110 10 0 \NUL
Nguyen, Tu-An
22 12 54 76 34 0 \NUL
tunhnguy
22 12 102 149 82 0 \NUL
CSE 12, Spring 2020
24 421 198 470 126 1 1 1
15 367 152 416 103
19 332 181 391 162 0
c_0
24 423 303 472 231 1 1 1
15 369 257 418 208
19 334 286 393 267 0
c_0
19 332 506 391 487 0
c_0
15 367 476 416 427
24 421 523 470 451 1 1 1
19 333 395 392 376 0
c_0
15 368 366 417 317
24 422 412 471 340 1 1 1
20 514 155 573 136 0
reg0_0
20 517 258 576 239 0
reg0_1
20 525 365 584 346 0
reg0_2
20 530 475 589 456 0
reg0_3
19 330 157 389 138 0
d_0
19 333 260 392 241 0
d_1
19 334 371 393 352 0
d_2
19 331 481 390 462 0
d_3
19 46 311 105 292 0
clear
5 116 324 165 275 0
22 359 85 430 65 0 \NUL
Register 0
22 44 556 704 536 0 \NUL
Each flip flop outputs a bit of the register. The flip flops take in the outputs from the Write Select Logic
22 44 579 694 559 0 \NUL
as the clock inputs. The flip flops also take in outputs from the Store Select Logic as the data inputs.
22 45 345 225 325 0 \NUL
The flip flops output 0 if the
22 46 367 199 347 0 \NUL
clear button is pressed
1 422 164 388 171
1 435 128 413 127
1 424 269 390 276
1 437 233 415 232
1 435 453 413 451
1 422 489 388 496
1 436 342 414 341
1 423 378 389 385
1 515 145 467 146
1 518 248 469 251
1 526 355 468 360
1 531 465 467 471
1 422 146 386 147
1 424 251 389 250
1 423 360 390 361
1 422 471 387 471
1 162 299 435 194
1 437 299 162 299
1 436 408 162 299
1 435 519 162 299
1 117 299 102 301
38 4
52 Register 1
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 110 10 0 \NUL
Nguyen, Tu-An
22 12 54 76 34 0 \NUL
tunhnguy
22 12 102 149 82 0 \NUL
CSE 12, Spring 2020
19 335 489 394 470 0
d_3
19 338 379 397 360 0
d_2
19 337 268 396 249 0
d_1
19 334 165 393 146 0
d_0
20 534 483 593 464 0
reg1_3
20 529 373 588 354 0
reg1_2
20 521 266 580 247 0
reg1_1
20 518 163 577 144 0
reg1_0
24 426 420 475 348 1 1 1
15 372 374 421 325
19 337 403 396 384 0
c_1
24 425 531 474 459 1 1 1
15 371 484 420 435
19 336 514 395 495 0
c_1
19 338 294 397 275 0
c_1
15 373 265 422 216
24 427 311 476 239 1 1 1
19 336 189 395 170 0
c_1
15 371 160 420 111
24 425 206 474 134 1 1 1
5 129 331 178 282 0
19 59 318 118 299 0
clear
22 357 107 428 87 0 \NUL
Register 1
22 60 352 240 332 0 \NUL
The flip flops output 0 if the
22 61 374 214 354 0 \NUL
clear button is pressed
22 59 563 719 543 0 \NUL
Each flip flop outputs a bit of the register. The flip flops take in the outputs from the Write Select Logic
22 59 586 709 566 0 \NUL
as the clock inputs. The flip flops also take in outputs from the Store Select Logic as the data inputs.
1 439 527 175 306
1 440 416 175 306
1 441 307 175 306
1 175 306 439 202
1 426 479 391 479
1 427 368 394 369
1 428 259 393 258
1 426 154 390 155
1 535 473 471 479
1 530 363 472 368
1 522 256 473 259
1 519 153 471 154
1 427 386 393 393
1 440 350 418 349
1 426 497 392 504
1 439 461 417 459
1 441 241 419 240
1 428 277 394 284
1 439 136 417 135
1 426 172 392 179
1 130 306 115 308
38 5
52 Register 2
22 25 82 65 62 0 \NUL
Lab 2
22 25 34 123 14 0 \NUL
Nguyen, Tu-An
22 25 58 89 38 0 \NUL
tunhnguy
22 25 106 162 86 0 \NUL
CSE 12, Spring 2020
24 428 168 477 96 1 1 1
15 374 122 423 73
19 339 151 398 132 0
c_2
24 430 273 479 201 1 1 1
15 376 227 425 178
19 341 256 400 237 0
c_2
19 339 476 398 457 0
c_2
15 374 446 423 397
24 428 493 477 421 1 1 1
19 340 365 399 346 0
c_2
15 375 336 424 287
24 429 382 478 310 1 1 1
20 521 125 580 106 0
reg2_0
20 524 228 583 209 0
reg2_1
20 532 335 591 316 0
reg2_2
20 537 445 596 426 0
reg2_3
19 337 127 396 108 0
d_0
19 340 230 399 211 0
d_1
19 341 341 400 322 0
d_2
19 338 451 397 432 0
d_3
19 69 280 128 261 0
clear
5 139 293 188 244 0
22 365 59 436 39 0 \NUL
Register 2
22 65 317 245 297 0 \NUL
The flip flops output 0 if the
22 66 339 219 319 0 \NUL
clear button is pressed
22 64 528 724 508 0 \NUL
Each flip flop outputs a bit of the register. The flip flops take in the outputs from the Write Select Logic
22 64 551 714 531 0 \NUL
as the clock inputs. The flip flops also take in outputs from the Store Select Logic as the data inputs.
1 429 134 395 141
1 442 98 420 97
1 431 239 397 246
1 444 203 422 202
1 442 423 420 421
1 429 459 395 466
1 443 312 421 311
1 430 348 396 355
1 522 115 474 116
1 525 218 476 221
1 533 325 475 330
1 538 435 474 441
1 429 116 393 117
1 431 221 396 220
1 430 330 397 331
1 429 441 394 441
1 185 268 442 164
1 444 269 185 268
1 443 378 185 268
1 140 268 125 270
1 185 268 442 489
38 6
52 Register 3
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 110 10 0 \NUL
Nguyen, Tu-An
22 12 54 76 34 0 \NUL
tunhnguy
22 12 102 149 82 0 \NUL
CSE 12, Spring 2020
24 415 207 464 135 1 1 1
15 361 161 410 112
19 326 190 385 171 0
c_3
24 417 312 466 240 1 1 1
15 363 266 412 217
19 328 295 387 276 0
c_3
19 326 515 385 496 0
c_3
15 361 485 410 436
24 415 532 464 460 1 1 1
19 327 404 386 385 0
c_3
15 362 375 411 326
24 416 421 465 349 1 1 1
20 508 164 567 145 0
reg3_0
20 511 267 570 248 0
reg3_1
20 519 374 578 355 0
reg3_2
20 524 484 583 465 0
reg3_3
19 324 166 383 147 0
d_0
19 327 269 386 250 0
d_1
19 328 380 387 361 0
d_2
19 325 490 384 471 0
d_3
19 32 320 91 301 0
clear
5 102 333 151 284 0
22 346 101 417 81 0 \NUL
Register 3
22 45 350 225 330 0 \NUL
The flip flops output 0 if the
22 46 372 199 352 0 \NUL
clear button is pressed
22 44 561 704 541 0 \NUL
Each flip flop outputs a bit of the register. The flip flops take in the outputs from the Write Select Logic
22 44 584 694 564 0 \NUL
as the clock inputs. The flip flops also take in outputs from the Store Select Logic as the data inputs.
1 416 173 382 180
1 429 137 407 136
1 418 278 384 285
1 431 242 409 241
1 429 462 407 460
1 416 498 382 505
1 430 351 408 350
1 417 387 383 394
1 509 154 461 155
1 512 257 463 260
1 520 364 462 369
1 525 474 461 480
1 416 155 380 156
1 418 260 383 259
1 417 369 384 370
1 416 480 381 480
1 148 308 429 203
1 431 308 148 308
1 430 417 148 308
1 429 528 148 308
1 103 308 88 310
38 7
52 Store Select
22 25 82 65 62 0 \NUL
Lab 2
22 25 34 123 14 0 \NUL
Nguyen, Tu-An
22 25 58 89 38 0 \NUL
tunhnguy
22 25 106 162 86 0 \NUL
CSE 12, Spring 2020
31 421 223 470 138 0 2
19 337 217 396 198 0
sel
19 337 194 396 175 0
kpad_3
19 336 172 395 153 0
alu_3
31 423 313 472 228 0 2
19 339 307 398 288 0
sel
19 339 284 398 265 0
kpad_2
19 338 262 397 243 0
alu_2
31 425 402 474 317 0 2
19 341 396 400 377 0
sel
19 341 373 400 354 0
kpad_1
31 425 499 474 414 0 2
19 341 493 400 474 0
sel
19 341 470 400 451 0
kpad_0
19 341 448 400 429 0
alu_0
20 494 187 553 168 0
d_3
20 500 275 559 256 0
d_2
20 505 360 564 341 0
d_1
20 504 461 563 442 0
d_0
19 340 351 399 332 0
alu_1
14 60 334 109 285
22 375 126 457 106 0 \NUL
Store Select
22 46 535 739 515 0 \NUL
These Muxes' outputs feed into the Registers' flip flops. The Muxes take in inputs from the ALU output and
22 45 557 737 537 0 \NUL
user inputted keypad output. Each Mux also takes in the output from the Store Select switch. All Muxes are
22 45 578 329 558 0 \NUL
grounded to have them constantly enabled.
1 422 207 393 207
1 424 297 395 297
1 426 386 397 386
1 426 483 397 483
1 495 177 467 177
1 501 265 469 267
1 506 350 471 356
1 505 451 471 453
1 422 219 106 309
1 424 309 106 309
1 106 309 426 398
1 426 495 106 309
1 422 183 393 184
1 422 177 392 162
1 424 273 395 274
1 424 267 394 252
1 426 362 397 363
1 426 356 396 341
1 426 459 397 460
1 397 438 426 453
38 8
52 Read Address 1
22 25 82 65 62 0 \NUL
Lab 2
22 25 34 123 14 0 \NUL
Nguyen, Tu-An
22 25 58 89 38 0 \NUL
tunhnguy
22 25 106 162 86 0 \NUL
CSE 12, Spring 2020
19 70 249 129 230 0
adr1_1
19 70 277 129 258 0
adr1_0
14 98 345 147 296
19 67 141 126 122 0
reg3_0
31 173 261 222 176 0 1
19 55 162 114 143 0
reg2_0
19 42 182 101 163 0
reg1_0
19 28 203 87 184 0
reg0_0
20 252 225 311 206 0
in1_0
19 392 263 451 244 0
adr1_1
19 392 291 451 272 0
adr1_0
14 420 359 469 310
19 389 155 448 136 0
reg3_1
31 495 275 544 190 0 1
19 377 176 436 157 0
reg2_1
19 364 196 423 177 0
reg1_1
19 350 217 409 198 0
reg0_1
20 574 239 633 220 0
in1_1
19 202 446 261 427 0
adr1_1
19 202 474 261 455 0
adr1_0
14 230 542 279 493
19 199 338 258 319 0
reg3_2
31 305 458 354 373 0 1
19 180 359 239 340 0
reg2_2
19 156 379 215 360 0
reg1_2
19 128 400 187 381 0
reg0_2
20 384 422 443 403 0
in1_2
19 529 456 588 437 0
adr1_1
19 529 484 588 465 0
adr1_0
14 557 552 606 503
19 526 348 585 329 0
reg3_3
31 632 468 681 383 0 1
19 505 369 564 350 0
reg2_3
19 486 389 545 370 0
reg1_3
19 462 408 521 389 0
reg0_3
20 711 432 770 413 0
in1_3
22 360 52 467 32 0 \NUL
Read Address 1
22 212 82 713 62 0 \NUL
The Mux outputs feed into the ALU Logic. The Muxes take in the outputs from
22 211 104 763 84 0 \NUL
the registers. They select certain bits based on the Read Register Address switches.
22 211 125 502 105 0 \NUL
The Muxes are grounded to remain enabled.
1 174 257 144 320
1 174 245 126 267
1 174 239 126 239
1 174 221 84 193
1 174 215 98 172
1 174 209 111 152
1 174 203 123 131
1 219 215 253 215
1 496 271 466 334
1 496 259 448 281
1 496 253 448 253
1 496 235 406 207
1 496 229 420 186
1 496 223 433 166
1 496 217 445 145
1 541 229 575 229
1 306 454 276 517
1 306 442 258 464
1 306 436 258 436
1 306 418 184 390
1 306 412 212 369
1 306 406 236 349
1 306 400 255 328
1 351 412 385 412
1 633 464 603 527
1 633 452 585 474
1 633 446 585 446
1 633 428 518 398
1 633 422 542 379
1 633 416 561 359
1 633 410 582 338
1 678 422 712 422
38 9
52 Read Address 2
22 25 82 65 62 0 \NUL
Lab 2
22 25 34 123 14 0 \NUL
Nguyen, Tu-An
22 25 58 89 38 0 \NUL
tunhnguy
22 25 106 162 86 0 \NUL
CSE 12, Spring 2020
19 72 265 131 246 0
adr2_1
19 72 293 131 274 0
adr2_0
14 100 361 149 312
19 69 157 128 138 0
reg3_0
31 175 277 224 192 0 1
19 57 178 116 159 0
reg2_0
19 44 198 103 179 0
reg1_0
19 30 219 89 200 0
reg0_0
20 254 241 313 222 0
in2_0
19 394 279 453 260 0
adr2_1
19 394 307 453 288 0
adr2_0
14 422 375 471 326
19 391 171 450 152 0
reg3_1
31 497 291 546 206 0 1
19 379 192 438 173 0
reg2_1
19 366 212 425 193 0
reg1_1
19 352 233 411 214 0
reg0_1
20 576 255 635 236 0
in2_1
19 204 462 263 443 0
adr2_1
19 204 490 263 471 0
adr2_0
14 232 558 281 509
19 201 354 260 335 0
reg3_2
31 307 474 356 389 0 1
19 183 375 242 356 0
reg2_2
19 160 395 219 376 0
reg1_2
19 135 416 194 397 0
reg0_2
20 386 438 445 419 0
in2_2
19 530 471 589 452 0
adr2_1
19 531 500 590 481 0
adr2_0
14 559 568 608 519
19 528 364 587 345 0
reg3_3
31 634 484 683 399 0 1
19 508 385 567 366 0
reg2_3
19 483 404 542 385 0
reg1_3
19 460 422 519 403 0
reg0_3
20 713 448 772 429 0
in2_3
22 366 50 473 30 0 \NUL
Read Address 2
22 210 78 711 58 0 \NUL
The Mux outputs feed into the ALU Logic. The Muxes take in the outputs from
22 209 100 761 80 0 \NUL
the registers. They select certain bits based on the Read Register Address switches.
22 209 121 500 101 0 \NUL
The Muxes are grounded to remain enabled.
1 176 273 146 336
1 176 261 128 283
1 176 255 128 255
1 176 237 86 209
1 176 231 100 188
1 176 225 113 168
1 176 219 125 147
1 221 231 255 231
1 498 287 468 350
1 498 275 450 297
1 498 269 450 269
1 498 251 408 223
1 498 245 422 202
1 498 239 435 182
1 498 233 447 161
1 543 245 577 245
1 308 470 278 533
1 308 458 260 480
1 308 452 260 452
1 308 434 191 406
1 308 428 216 385
1 308 422 239 365
1 308 416 257 344
1 353 428 387 428
1 635 480 605 543
1 635 468 587 490
1 635 462 586 461
1 635 444 516 412
1 635 438 539 394
1 635 432 564 375
1 635 426 584 354
1 680 438 714 438
38 10
52 ALU
22 25 82 65 62 0 \NUL
Lab 2
22 25 34 123 14 0 \NUL
Nguyen, Tu-An
22 25 58 89 38 0 \NUL
tunhnguy
22 25 106 162 86 0 \NUL
CSE 12, Spring 2020
19 96 212 155 193 0
in2_3
19 84 233 143 214 0
in2_2
19 73 252 132 233 0
in2_1
19 69 273 128 254 0
in2_0
31 236 303 285 218 0 1
19 89 298 148 279 0
in1_1
19 97 319 156 300 0
in1_0
14 146 344 195 295
20 303 267 362 248 0
alu_0
19 459 192 518 173 0
in2_0
19 447 213 506 194 0
in2_3
19 436 232 495 213 0
in2_2
19 432 253 491 234 0
in2_1
31 599 283 648 198 0 1
19 452 278 511 259 0
in1_1
19 460 299 519 280 0
in1_0
14 509 324 558 275
20 666 247 725 228 0
alu_1
19 107 398 166 379 0
in2_1
19 81 419 140 400 0
in2_0
19 53 438 112 419 0
in2_3
19 49 459 108 440 0
in2_2
31 247 489 296 404 0 1
19 99 484 158 465 0
in1_1
19 108 505 167 486 0
in1_0
14 157 530 206 481
20 314 453 373 434 0
alu_2
19 484 395 543 376 0
in2_2
19 456 416 515 397 0
in2_1
19 428 435 487 416 0
in2_0
19 424 456 483 437 0
in2_3
31 624 486 673 401 0 1
19 476 481 535 462 0
in1_1
19 485 502 544 483 0
in1_0
14 534 527 583 478
20 691 450 750 431 0
alu_3
22 388 48 418 28 0 \NUL
ALU
22 209 80 767 60 0 \NUL
The ALU outputs the bitwise right rotation of ALU input 2 by the amount in ALU input 1.
22 209 103 733 83 0 \NUL
The ALU inputs are outputted by their respective Read Address Logic. Only the 2
22 208 125 753 105 0 \NUL
least significant bits of ALU input 1 are needed for the Muxes' select input, because
22 209 146 775 126 0 \NUL
4 bit rotations are repeated every 4 rotations. All the Muxes are grounded to keep them
22 208 167 268 147 0 \NUL
enabled.
1 152 202 237 245
1 140 223 237 251
1 129 242 237 257
1 125 263 237 263
1 145 288 237 281
1 153 309 237 287
1 192 319 237 299
1 282 257 304 257
1 515 182 600 225
1 503 203 600 231
1 492 222 600 237
1 488 243 600 243
1 508 268 600 261
1 516 289 600 267
1 555 299 600 279
1 645 237 667 237
1 163 388 248 431
1 137 409 248 437
1 109 428 248 443
1 105 449 248 449
1 155 474 248 467
1 164 495 248 473
1 203 505 248 485
1 293 443 315 443
1 540 385 625 428
1 512 406 625 434
1 484 425 625 440
1 480 446 625 446
1 532 471 625 464
1 541 492 625 470
1 580 502 625 482
1 670 440 692 440
39 16777215
47 0
40 1 6 6
50 800 600
51 0 100
30
System
16
700
0
0
0
0
0
34
